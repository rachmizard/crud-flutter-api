version: '3.8'


# networks:
#   default:
#     driver: bridge

services:
  app:
    depends_on:
      mysqldb:
        condition: service_healthy
    build: .
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - NODE_ENV=production
      - DB_USER=$MYSQLDB_USER
      - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - DB_NAME=$MYSQLDB_DATABASE
      - DB_PORT=$MYSQLDB_DOCKER_PORT
      - DB_HOST=mysqldb
    command: sh -c "yarn db:migrate && yarn start"
    container_name: flutter-product-api
    image: flutter-product-api
    # networks:
    #   - default
    
  mysqldb:
    image: mysql:latest
    # networks:
    #   - default
    env_file: ./.env
    container_name: flutter-product-api-mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  # migrate:
  #   build: 
  #     - context: .
  #     - dockerfile: Dockerfile
  #   command: yarn db:migrate
  #   env_file: ./.env
  #   networks:
  #     - default
  #   environment:
  #     - NODE_ENV=production
  #     - DB_USER=$MYSQLDB_USER
  #     - DB_PASSWORD=$MYSQLDB_ROOT_PASSWORD
  #     - DB_NAME=$MYSQLDB_DATABASE
  #     - DB_PORT=$MYSQLDB_DOCKER_PORT
  #     - DB_HOST=mysqldb
  #   depends_on:
  #     - mysqldb



volumes: 
  db: